@page
@using IsikUn.IncubationCentre.Localization
@using IsikUn.IncubationCentre.Permissions
@using IsikUn.IncubationCentre.Web.Pages.Projects
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Grid
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@model DetailModel
@inject IStringLocalizer<IncubationCentreResource> L
@{
}
<style>
    .infoCardBody .border-bottom {
        border: none !important;
        margin-bottom: 17px;
    }
</style>
<abp-row>
    <abp-column size="_12">
        <abp-card>
            <abp-card-header>
                <abp-card-title>
                    @L["ProgressOfProject"].Value
                    <i class="fa fa-info-circle ms-2" style="font-size: 14px;" data-toggle="tooltip" data-placement="top" title="@L["ProjectProgressCalculation"].Value"></i>
                </abp-card-title>
            </abp-card-header>
            <abp-card-body>
                @if (Model.Project != null)
                {
                    if (Model.Project.Milestones != null && Model.Project.Milestones.Count() > 0)
                    {
                                <abp-progress-bar type="Success" min-value="0" max-value="100" value="@Model.Project.Milestones.Count(a => a.isCompleted) == 0 ? 5 : @Model.Project.Milestones.Count(a => a.isCompleted) * 100 /Model.Project.Milestones.Count()" animation="true" strip="true"> @(Model.Project.Milestones.Count(a => a.isCompleted) * 100 /Model.Project.Milestones.Count()) % </abp-progress-bar>
                    }
                    else
                    {
                                <abp-progress-bar type="Success" min-value="0" max-value="100" value="3" animation="true" strip="true">0%</abp-progress-bar>
                    }
                }
                else
                {
                        <div class="text-center mb-2">
                            <span class="alert alert-info text-center rounded px-7">
                            @L["NoProjectFound"].Value
                            </span>
                        </div>
                }
            </abp-card-body>
        </abp-card>
    </abp-column>

    <abp-column size="_12">
        <abp-card>
            <abp-card-header>
                <abp-card-title>
                    @L["GeneralInformations"].Value
                    @if (Model.IsAllowedEdit)
                    {
                            <i class="fa fa-edit float-end" id="editMyInfo" style="cursor:pointer;"></i>
                    }
                </abp-card-title>
            </abp-card-header>
            <abp-card-body class="infoCardBody">
                <abp-row>
                    <abp-column size="_6" class="pe-4 border-end">
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["ProjectName"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@(!string.IsNullOrEmpty(Model.Project.Name) ? Model.Project.Name : "-")</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["CreationDate"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end" data-long-name="true" data-long-name-size="18">@(Model.Project.CreationTime.ToString("dd.MM.yyyy HH:MM"))</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["EstimatedEndDate"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end" data-long-name="true" data-long-name-size="18">
                                @(Model.Project.Milestones != null && Model.Project.Milestones.Any() ? Model.Project.Milestones.OrderByDescending(a => a.EndDate).FirstOrDefault().EndDate.ToString("dd.MM.yyyy HH:MM") : "-")
                            </abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["Status"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end" data-long-name="true" data-long-name-size="18">@(L[Model.Project.Status.ToString()].Value)</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["Milestones"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@(Model.Project.Milestones != null ? (Model.Project.Milestones.Count(a => a.isCompleted) + " / " + Model.Project.Milestones.Count()) : "0/0")</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["InvesmentReady"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@Html.Raw((Model.Project.InvesmentReady ? "<i class='fa fa-check text-success'></i>" : "<i class='fa fa-times text-danger'></i>"))</abp-column>
                        </abp-row>
                    </abp-column>
                    <abp-column size="_6" class="ps-4">
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["Entrepreneur"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@(Model.EntreprenurNameSurname)</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["Collaborators"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@(Model.Project.Collaborators != null ? Model.Project.Collaborators.Count() : "0")</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["Investors"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@(Model.Project.Investors != null ? Model.Project.Investors.Count() : "0")</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["Mentors"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@(Model.Project.Mentors != null ? Model.Project.Mentors.Count() : "0")</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["OpenForInvesment"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@Html.Raw((Model.Project.OpenForInvesment ? "<i class='fa fa-check text-success'></i>" : "<i class='fa fa-times text-danger'></i>"))</abp-column>
                        </abp-row>
                        <abp-row class="border-bottom">
                            <abp-column size="_6"><b>@L["SharePerInvesment"].Value:</b></abp-column>
                            <abp-column size="_6" class="text-end">@(Model.Project.SharePerInvest)</abp-column>
                        </abp-row>
                    </abp-column>
                </abp-row>
            </abp-card-body>
        </abp-card>
    </abp-column>

    <abp-column size="_12">
        <abp-row>
            <abp-column class='@(Model.IsAllowedSeeInvestment ? "" : "d-none")' size='@(Model.IsAllowedSeeInvestment ? ColumnSize._5 : ColumnSize.Undefined)'>
                <abp-card style="height:343px;">
                    <abp-card-header>
                        <abp-card-title>
                            @L["PercentageOfShareholders"].Value
                        </abp-card-title>
                    </abp-card-header>
                    <abp-card-body>
                        <div class="chart chart-sm">
                            <canvas id="chartjs-pie-invesments"></canvas>
                        </div>
                    </abp-card-body>
                </abp-card>
            </abp-column>
            <abp-column size='@(Model.IsAllowedSeeInvestment ? ColumnSize._7 : ColumnSize._12)'>
                <abp-card style="height:343px;">
                    <abp-card-header>
                        <abp-card-title>
                            @L["ListOfAssociatedPeople"].Value
                            @if (Model.IsInvestor  && Model.Project.Status != IsikUn.IncubationCentre.Projects.ProjectStatus.Declined)
                            {
                                    <button class="btn btn-info float-end px-4" id="investButton">@L["Invest"]</button>
                            }
                        </abp-card-title>
                    </abp-card-header>
                    <abp-card-body>
                        <abp-row>
                            <abp-column size="_6">
                                <table style="width:100%">
                                    <tbody class="pe-2">
                                        <tr>
                                            <th style="width:70%;">@L["Name"].Value</th>
                                            <th>@L["Role"].Value</th>
                                        </tr>
                                        @foreach (var person in Model.Project.Collaborators)
                                        {
                                                <tr>
                                                @if (person.IdentityUser != null &&
                                              !string.IsNullOrEmpty(person.IdentityUser.Name) &&
                                              !string.IsNullOrEmpty(person.IdentityUser.Surname)
                                              )
                                                {
                                                            <td class="py-2" data-long-name="true" data-long-name-size="12">@string.Format("{0} {1}",person.IdentityUser.Name, person.IdentityUser.Surname)</td>
                                                }
                                                else
                                                {
                                                            <td class="py-2">-</td>
                                                }
                                                    <td class="py-2">@L["Collaborator"]</td>
                                                </tr>
                                        }
                                        @foreach (var person in Model.Project.Mentors)
                                        {
                                                <tr>
                                                @if (person.IdentityUser != null &&
                                              !string.IsNullOrEmpty(person.IdentityUser.Name) &&
                                              !string.IsNullOrEmpty(person.IdentityUser.Surname)
                                              )
                                                {
                                                            <td class="py-2" data-long-name="true" data-long-name-size="12">@string.Format("{0} {1}",person.IdentityUser.Name, person.IdentityUser.Surname)</td>
                                                }
                                                else
                                                {
                                                            <td class="py-2">-</td>
                                                }
                                                    <td class="py-2">@L["Mentor"]</td>
                                                </tr>
                                        }
                                        @foreach (var person in Model.Project.Investors)
                                        {
                                                <tr>
                                                @if (person.IdentityUser != null &&
                                              !string.IsNullOrEmpty(person.IdentityUser.Name) &&
                                              !string.IsNullOrEmpty(person.IdentityUser.Surname)
                                              )
                                                {
                                                            <td class="py-2" data-long-name="true" data-long-name-size="12">@string.Format("{0} {1}",person.IdentityUser.Name, person.IdentityUser.Surname)</td>
                                                }
                                                else
                                                {
                                                            <td class="py-2">-</td>
                                                }
                                                    <td class="py-2">@L["Investor"]</td>
                                                </tr>
                                        }
                                    </tbody>
                                </table>
                            </abp-column>
                            <abp-column size="_6" class="text-center">
                                <div>
                                    <abp-card-title>
                                        @L["TotalProjectValue"].Value
                                    </abp-card-title>
                                    <h4>
                                        @Model.Project.TotalValuation  @Model.Project.TotalValuationCurrencySymbol
                                    </h4>
                                </div>
                                <div class="mt-5">
                                    <abp-card-title>
                                        @L["ProjectTags"].Value
                                    </abp-card-title>
                                    <div>
                                        @foreach (var tag in Model.Project.Tags.Split(","))
                                        {
                                                <span class="badge badge-info">@tag</span>
                                        }
                                    </div>
                                </div>
                            </abp-column>
                        </abp-row>
                    </abp-card-body>
                </abp-card>
            </abp-column>
        </abp-row>
    </abp-column>

    <abp-column size="_12">
        <abp-card>
            <abp-card-header>
                <abp-column size-md="_6">
                    <abp-card-title>@L["Milestones"]</abp-card-title>
                </abp-column>
                <abp-column size-md="_6" class="float-end text-end">
                    @if (Model.IsAllowedEdit  && Model.Project.Status != IsikUn.IncubationCentre.Projects.ProjectStatus.Declined)
                    {
                            <abp-button id="NewMilestoneButton"
                                text="@L["NewMilestone"].Value"
                                icon="plus"
                                button-type="Primary" />
                    }
                </abp-column>
            </abp-card-header>
            <abp-card-body>
                <abp-table striped-rows="true" id="MilestonesTable"></abp-table>
            </abp-card-body>
        </abp-card>
    </abp-column>

    <abp-column size="_12">
        <abp-card>
            <abp-card-header>
                <abp-column size-md="_6">
                    <abp-card-title>@L["Events"]</abp-card-title>
                </abp-column>
                <abp-column size-md="_6" class="float-end text-end">
                    @if (Model.isUserInProject && Model.Project.Status != IsikUn.IncubationCentre.Projects.ProjectStatus.Declined)
                    {
                            <abp-button id="NewEventButton"
                                text="@L["NewEvent"].Value"
                                icon="plus"
                                button-type="Primary" />
                    }
                </abp-column>
            </abp-card-header>
            <abp-card-body>
                <abp-table striped-rows="true" id="ProjectEventsTable"></abp-table>
            </abp-card-body>
        </abp-card>
    </abp-column>
</abp-row>

<script>
        document.addEventListener("DOMContentLoaded", function() {
                var l = l || abp.localization.getResource('IncubationCentre');

                // Pie chart for Invesmtents
                var InvesmentChartLabels = @Json.Serialize(Model.InvestorNames);
                var InvesmentChartData = @Json.Serialize(Model.InvestorShares);

                new Chart(document.getElementById("chartjs-pie-invesments"), {
                    type: "pie",
                    data: {
                        labels: InvesmentChartLabels,
                        datasets: [{
                            data: InvesmentChartData,
                            backgroundColor: [
                                window.theme.primary,
                                window.theme.warning,
                                window.theme.danger,
                                "#dee2e6"
                            ],
                            borderColor: "transparent"
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        legend: {
                            display: false
                        }
                    }
                });

                var milestoneEditModal = new abp.ModalManager(abp.appPath + 'Milestones/EditModal');
                var dataTableMilestone = $('#MilestonesTable').DataTable(
                    abp.libs.datatables.normalizeConfiguration({
                        serverSide: false,
                        paging: true,
                        scrollY: '302px',
                        order: [[1, "asc"]],
                        searching: true,
                        scrollX: true,
                        ajax: abp.libs.datatables.createAjax(
                            isikUn.incubationCentre.milestones.milestone.getList, { projectId: '@Model.Id', sorting: 'endDate'}),
                        columnDefs: [
                            {
                                title: l('Actions'),
                                rowAction: {
                                    items:
                                        [
                                            {
                                                text: l('Edit'),
                                                visible: function (data) {
                                                    return data.creatorId == abp.currentUser.id
                                                },
                                                action: function (data) {
                                                    milestoneEditModal.open({ id: data.record.id });
                                                }
                                            },
                                            {
                                                text: l('Delete'),
                                                visible: function (data) {
                                                    debugger;
                                                    return data.creatorId == abp.currentUser.id
                                                },
                                                confirmMessage: function (data) {
                                                    return l(
                                                        'EntityDeletionConfirmationMessage',
                                                        data.record.name
                                                    );
                                                },
                                                action: function (data) {
                                                    isikUn.incubationCentre.milestones.milestone
                                                        .delete(data.record.id)
                                                        .then(function () {
                                                            abp.notify.info(
                                                                l('SuccessfullyDeleted')
                                                            );
                                                            location.reload();
                                                        });
                                                }
                                            }
                                        ]
                                }
                            },
                            {
                                title: l('Title'),
                                data: "title"
                            },
                            {
                                title: l('StartDate'),
                                data: "startDate",
                                render: function (data) {
                                    try{
                                        var date = new Date(data).toLocaleDateString();
                                        return date != "Invalid Date" ? date : "-";
                                    } catch {
                                        return "-";
                                    }
                                }
                            },
                            {
                                title: l('EndDate'),
                                data: "endDate",
                                render: function (data) {
                                    try{
                                        var date = new Date(data).toLocaleDateString();
                                        return date != "Invalid Date" ? date : "-";
                                    } catch {
                                        return "-";
                                    }
                                }
                            },
                            {
                                title: l('isCompleted'),
                                data: "isCompleted",
                                render: function (data) {
                                    return data ? "<i class='fa fa-check text-success'></i>" : "<i class='fa fa-times text-danger'></i>";
                                }
                            }
                        ]
                }));

                var milestoneCreateModal = new abp.ModalManager(abp.appPath + 'Milestones/CreateModal');
                
                $("#NewMilestoneButton").click(function(){
                      milestoneCreateModal.open({ projectId: '@Model.Project.Id' });
                });

                var EditProjectModal = new abp.ModalManager(abp.appPath + 'Projects/EditModal');
                
                $("#editMyInfo").click(function(){
                      EditProjectModal.open({ id: '@Model.Project.Id' });
                });

                milestoneCreateModal.onResult(function () {
                    location.reload();
                });

                milestoneEditModal.onResult(function () {
                    location.reload();
                });

                EditProjectModal.onResult(function () {
                    location.reload();
                });

                $("#investButton").click(function(){
                    abp.message.confirm(
                        "You Are Investing for @(Html.Raw(Model.Project.SharePerInvest)) % of This Project. @(Html.Raw(Model.Project.TotalValuation * Model.Project.SharePerInvest / 100)) @(Html.Raw(Model.Project.TotalValuationCurrencySymbol))",
                        'Are you sure?',
                        function (isConfirmed) {
                            if (isConfirmed) {
                                isikUn.incubationCentre.projects.project.invest('@Model.Project.Id').then(function(){
                                    abp.message.success('@(Html.Raw(Model.Project.Name)) Adlı Projeye @((Html.Raw(Model.Project.TotalValuation * Model.Project.SharePerInvest / 100))) @((Html.Raw(Model.Project.TotalValuationCurrencySymbol))) Değerinde Yatırım Yaparak + @(Html.Raw(Model.Project.SharePerInvest)) % Hak Sahibi Oldunuz.')
                                    setTimeout(() => {
                                        location.reload();
                                    }, 2500);
                                });

                            }
                        }
                    );

                });



                var createEventModal = new abp.ModalManager(abp.appPath + 'Events/CreateModal');
                var editEventModal = new abp.ModalManager(abp.appPath + 'Events/EditModal');

                var eventsTable = $('#ProjectEventsTable').DataTable(abp.libs.datatables.normalizeConfiguration({
                    processing: true,
                    serverSide: true,
                    paging: true,
                    searching: false,
                    autoWidth: false,
                    scrollCollapse: true,
                    order: [[0, "asc"]],
                    ajax: abp.libs.datatables.createAjax(isikUn.incubationCentre.events.event.getList,{ projectName : '@Model.Project.Name'}),
                    columnDefs: [
                        {
                            rowAction: {
                                items:
                                    [ // TODO : create new event button goes here

                                        {
                                            text: l('Edit'),
                                            visible: function (data) {
                                                return data.creatorPerson.identityUserId == abp.currentUser.id
                                            },
                                            action: function (data) {
                                                editEventModal.open({ id: data.record.id });
                                            }
                                        },
                                        {
                                            text: l('Delete'),
                                            visible: function (data) {
                                                debugger;
                                                return data.creatorPerson.identityUserId == abp.currentUser.id
                                            },
                                            confirmMessage: function (data) {
                                                return l('EntityDeletionConfirmationMessage', data.record.title);
                                            },
                                            action: function (data) {
                                                isikUn.incubationCentre.events.event.delete(data.record.id)
                                                    .then(function () {
                                                        abp.notify.info(l('SuccessfullyDeleted'));
                                                        dataTable.ajax.reload();
                                                    });
                                            }
                                        }
                                    ]
                            }
                        },
                        {
                            title: l('Title'),
                            data: "title"
                        },
                        {
                            title: l('Date'),
                            data: "eventDate",
                            render: function (data) {
                                if (data == null) return "-";
                                try {
                                    var date = new Date(data).toLocaleDateString();
                                    return date != "Invalid Date" ? date : "-";
                                } catch {
                                    return "-";
                                }
                            }
                        },
                        {
                            title: l('Description'),
                            data: "description"
                        },
                        {
                            title: l('ProjectName'),
                            data: "project",
                            render: function (data) {
                                if (data == null) return "-";
                                if (data.name == null) return "-";
                                return data.name;
                            }

                        },

                    ]
                }));

                $('#NewEventButton').click(function (e) {
                    e.preventDefault();
                    createEventModal.open();
                });

                createEventModal.onResult(function () {
                    eventsTable.ajax.reload();
                });

                editEventModal.onResult(function () {
                    eventsTable.ajax.reload();
                });
        });
</script>